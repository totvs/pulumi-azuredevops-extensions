// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BuildFolder struct {
	pulumi.CustomResourceState

	// The path to be created.
	Path pulumi.StringOutput `pulumi:"path"`
	// The project ID or project name.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
}

// NewBuildFolder registers a new resource with the given unique name, arguments, and options.
func NewBuildFolder(ctx *pulumi.Context,
	name string, args *BuildFolderArgs, opts ...pulumi.ResourceOption) (*BuildFolder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	var resource BuildFolder
	err := ctx.RegisterResource("azuredevops-extensions:index:BuildFolder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBuildFolder gets an existing BuildFolder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBuildFolder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BuildFolderState, opts ...pulumi.ResourceOption) (*BuildFolder, error) {
	var resource BuildFolder
	err := ctx.ReadResource("azuredevops-extensions:index:BuildFolder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BuildFolder resources.
type buildFolderState struct {
}

type BuildFolderState struct {
}

func (BuildFolderState) ElementType() reflect.Type {
	return reflect.TypeOf((*buildFolderState)(nil)).Elem()
}

type buildFolderArgs struct {
	// The path to be created.
	Path string `pulumi:"path"`
	// The project ID or project name.
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a BuildFolder resource.
type BuildFolderArgs struct {
	// The path to be created.
	Path pulumi.StringInput
	// The project ID or project name.
	ProjectId pulumi.StringInput
}

func (BuildFolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*buildFolderArgs)(nil)).Elem()
}

type BuildFolderInput interface {
	pulumi.Input

	ToBuildFolderOutput() BuildFolderOutput
	ToBuildFolderOutputWithContext(ctx context.Context) BuildFolderOutput
}

func (*BuildFolder) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildFolder)(nil))
}

func (i *BuildFolder) ToBuildFolderOutput() BuildFolderOutput {
	return i.ToBuildFolderOutputWithContext(context.Background())
}

func (i *BuildFolder) ToBuildFolderOutputWithContext(ctx context.Context) BuildFolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildFolderOutput)
}

func (i *BuildFolder) ToBuildFolderPtrOutput() BuildFolderPtrOutput {
	return i.ToBuildFolderPtrOutputWithContext(context.Background())
}

func (i *BuildFolder) ToBuildFolderPtrOutputWithContext(ctx context.Context) BuildFolderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildFolderPtrOutput)
}

type BuildFolderPtrInput interface {
	pulumi.Input

	ToBuildFolderPtrOutput() BuildFolderPtrOutput
	ToBuildFolderPtrOutputWithContext(ctx context.Context) BuildFolderPtrOutput
}

type buildFolderPtrType BuildFolderArgs

func (*buildFolderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildFolder)(nil))
}

func (i *buildFolderPtrType) ToBuildFolderPtrOutput() BuildFolderPtrOutput {
	return i.ToBuildFolderPtrOutputWithContext(context.Background())
}

func (i *buildFolderPtrType) ToBuildFolderPtrOutputWithContext(ctx context.Context) BuildFolderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildFolderPtrOutput)
}

// BuildFolderArrayInput is an input type that accepts BuildFolderArray and BuildFolderArrayOutput values.
// You can construct a concrete instance of `BuildFolderArrayInput` via:
//
//          BuildFolderArray{ BuildFolderArgs{...} }
type BuildFolderArrayInput interface {
	pulumi.Input

	ToBuildFolderArrayOutput() BuildFolderArrayOutput
	ToBuildFolderArrayOutputWithContext(context.Context) BuildFolderArrayOutput
}

type BuildFolderArray []BuildFolderInput

func (BuildFolderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BuildFolder)(nil)).Elem()
}

func (i BuildFolderArray) ToBuildFolderArrayOutput() BuildFolderArrayOutput {
	return i.ToBuildFolderArrayOutputWithContext(context.Background())
}

func (i BuildFolderArray) ToBuildFolderArrayOutputWithContext(ctx context.Context) BuildFolderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildFolderArrayOutput)
}

// BuildFolderMapInput is an input type that accepts BuildFolderMap and BuildFolderMapOutput values.
// You can construct a concrete instance of `BuildFolderMapInput` via:
//
//          BuildFolderMap{ "key": BuildFolderArgs{...} }
type BuildFolderMapInput interface {
	pulumi.Input

	ToBuildFolderMapOutput() BuildFolderMapOutput
	ToBuildFolderMapOutputWithContext(context.Context) BuildFolderMapOutput
}

type BuildFolderMap map[string]BuildFolderInput

func (BuildFolderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BuildFolder)(nil)).Elem()
}

func (i BuildFolderMap) ToBuildFolderMapOutput() BuildFolderMapOutput {
	return i.ToBuildFolderMapOutputWithContext(context.Background())
}

func (i BuildFolderMap) ToBuildFolderMapOutputWithContext(ctx context.Context) BuildFolderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildFolderMapOutput)
}

type BuildFolderOutput struct {
	*pulumi.OutputState
}

func (BuildFolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildFolder)(nil))
}

func (o BuildFolderOutput) ToBuildFolderOutput() BuildFolderOutput {
	return o
}

func (o BuildFolderOutput) ToBuildFolderOutputWithContext(ctx context.Context) BuildFolderOutput {
	return o
}

func (o BuildFolderOutput) ToBuildFolderPtrOutput() BuildFolderPtrOutput {
	return o.ToBuildFolderPtrOutputWithContext(context.Background())
}

func (o BuildFolderOutput) ToBuildFolderPtrOutputWithContext(ctx context.Context) BuildFolderPtrOutput {
	return o.ApplyT(func(v BuildFolder) *BuildFolder {
		return &v
	}).(BuildFolderPtrOutput)
}

type BuildFolderPtrOutput struct {
	*pulumi.OutputState
}

func (BuildFolderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildFolder)(nil))
}

func (o BuildFolderPtrOutput) ToBuildFolderPtrOutput() BuildFolderPtrOutput {
	return o
}

func (o BuildFolderPtrOutput) ToBuildFolderPtrOutputWithContext(ctx context.Context) BuildFolderPtrOutput {
	return o
}

type BuildFolderArrayOutput struct{ *pulumi.OutputState }

func (BuildFolderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildFolder)(nil))
}

func (o BuildFolderArrayOutput) ToBuildFolderArrayOutput() BuildFolderArrayOutput {
	return o
}

func (o BuildFolderArrayOutput) ToBuildFolderArrayOutputWithContext(ctx context.Context) BuildFolderArrayOutput {
	return o
}

func (o BuildFolderArrayOutput) Index(i pulumi.IntInput) BuildFolderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildFolder {
		return vs[0].([]BuildFolder)[vs[1].(int)]
	}).(BuildFolderOutput)
}

type BuildFolderMapOutput struct{ *pulumi.OutputState }

func (BuildFolderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BuildFolder)(nil))
}

func (o BuildFolderMapOutput) ToBuildFolderMapOutput() BuildFolderMapOutput {
	return o
}

func (o BuildFolderMapOutput) ToBuildFolderMapOutputWithContext(ctx context.Context) BuildFolderMapOutput {
	return o
}

func (o BuildFolderMapOutput) MapIndex(k pulumi.StringInput) BuildFolderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BuildFolder {
		return vs[0].(map[string]BuildFolder)[vs[1].(string)]
	}).(BuildFolderOutput)
}

func init() {
	pulumi.RegisterOutputType(BuildFolderOutput{})
	pulumi.RegisterOutputType(BuildFolderPtrOutput{})
	pulumi.RegisterOutputType(BuildFolderArrayOutput{})
	pulumi.RegisterOutputType(BuildFolderMapOutput{})
}
