// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevopsExtensions
{
    [AzureDevopsExtensionsResourceType("azuredevops-extensions:index:PipelineEnvironment")]
    public partial class PipelineEnvironment : Pulumi.CustomResource
    {
        /// <summary>
        /// List of kubernetes resources.
        /// </summary>
        [Output("kubernetesResources")]
        public Output<ImmutableArray<Outputs.KubernetesResource>> KubernetesResources { get; private set; } = null!;

        /// <summary>
        /// The environment name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The project ID or project name.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a PipelineEnvironment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PipelineEnvironment(string name, PipelineEnvironmentArgs args, CustomResourceOptions? options = null)
            : base("azuredevops-extensions:index:PipelineEnvironment", name, args ?? new PipelineEnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }
        internal PipelineEnvironment(string name, ImmutableDictionary<string, object?> dictionary, CustomResourceOptions? options = null)
            : base("azuredevops-extensions:index:PipelineEnvironment", name, new DictionaryResourceArgs(dictionary), MakeResourceOptions(options, ""))
        {
        }

        private PipelineEnvironment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azuredevops-extensions:index:PipelineEnvironment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PipelineEnvironment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PipelineEnvironment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PipelineEnvironment(name, id, options);
        }
    }

    public sealed class PipelineEnvironmentArgs : Pulumi.ResourceArgs
    {
        [Input("kubernetesResources")]
        private InputList<Inputs.KubernetesResourceArgs>? _kubernetesResources;

        /// <summary>
        /// List of kubernetes resources.
        /// </summary>
        public InputList<Inputs.KubernetesResourceArgs> KubernetesResources
        {
            get => _kubernetesResources ?? (_kubernetesResources = new InputList<Inputs.KubernetesResourceArgs>());
            set => _kubernetesResources = value;
        }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The project ID or project name.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public PipelineEnvironmentArgs()
        {
        }
    }
}
